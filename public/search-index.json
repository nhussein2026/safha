[
  {
    "title": "البنية التحتية والتقنيات الأساسية للإنترنت",
    "slug": "/2025/04/2025-04-23-internet-infrastructure",
    "content": "\nالإنترنت هو البنية التحتية العالمية التي تربط بين الشبكات الحاسوبية عبر مجموعة من البروتوكولات تُعرف بـ TCP/IP. إنه يشمل مجموعة متنوعة من الشبكات، سواء كانت خاصة، عامة، أكاديمية، تجارية، أو حكومية، ويمتد من النطاق المحلي إلى العالمي. يعتمد الإنترنت على تقنيات الشبكات الإلكترونية واللاسلكية والبصرية لتبادل البيانات.\n\n### أصول الإنترنت وتطوره\n\nتعود أصول الإنترنت إلى أبحاث في الستينيات التي مكّنت من مشاركة وقت استخدام الموارد الحاسوبية وتطوير تحويل الحزم، مما أدى إلى تصميم شبكات حاسوبية لتبادل الب",
    "date": "2025-05-16T04:35:11.998Z"
  },
  {
    "title": "أفضل ممارسات لتصميم وتطوير الويب",
    "slug": "/2025/04/2025-04-24-web-best-practices",
    "content": "\nيتطور مجال تطوير الويب بسرعة كبيرة ويتطلب هذا من المصممين والمطورين أن يكونوا على دراية بأحدث التقنيات وأفضل الممارسات العملية من أجل ضمان إنتاج مواقع ذات جودة عالية.\n\n### ماذا نعني بأفضل الممارسات في البرمجة؟\n\nأفضل الممارسات هي عبارة عن مجموعة من القواعد المتعارف عليها من قبل المبرمجين والتي من خلالها ضمان الحصول على افضل جودة ممكنة بأقل عدد ممكن من العيوب والثغرات.\n\nأفضل الممارسات بالنسبة لتطوير الويب تشمل استخدام تقنيات محددة لأداء عمل محدد بدلاً من أخرى بالإضافة إلى استخدام أسلوب محدد وواضح",
    "date": "2025-05-16T04:35:12.017Z"
  },
  {
    "title": "فهم الذكاء الاصطناعي - المفهوم، التطبيقات، الفوائد والمخاطر",
    "slug": "/2025/04/2025-04-25-artificial-intelligence",
    "content": "\nيشير مصطلح **الذكاء الاصطناعي (AI)** إلى أنظمة الحاسوب والبرمجيات القادرة على تنفيذ مهام تتطلب عادةً ذكاءً بشريًا، مثل الفهم، التفكير، التعلّم، واتخاذ القرارات. تطور هذا المجال ليشمل العديد من التقنيات التي أصبحت اليوم أساسًا في الكثير من المنتجات والخدمات الرقمية، بدءًا من التوصيات المخصصة على منصات البث إلى المساعدات الذكية وخدمات دعم العملاء.\n\nلكن ما مدى واقعية هذه \"الذكاء\"؟ وهل هذه الأنظمة تمتلك ذكاءً فعليًا أم أنها مجرد أدوات حسابية متقدمة؟ في هذا المقال، سنقدم نظرة شاملة على الذكاء الاصطن",
    "date": "2025-05-16T04:35:12.035Z"
  },
  {
    "title": "مقدمة إلى Alpine.js لتطوير الواجهات الأمامية ",
    "slug": "/2025/05/2025-05-02-alpine",
    "content": "\nimport { CodeBlock, ComparisonTable, ProCon, CodeWindow } from \"@components\";\n\n{/* 1. المقدمة */}\nAlpine.js هي مكتبة JavaScript خفيفة موجهة لتطوير واجهات المستخدم التفاعلية، وتُعد بديلاً بسيطًا وخفيفًا لإطارات مثل Vue وReact في المشاريع الصغيرة أو المتوسطة. تعتمد على كتابة التعليمات التفاعلية مباشرة داخل HTML باستخدام خصائص مخصصة x-\\*، مما يجعلها مشابهة في الفكرة لـ jQuery ولكن بأسلوب حديث ومُنظم.\n\n{/* ## 2. المميزات الرئيسية */}\n\n## المزايا الرئيسية لـ Alpine.js\n\n- خفيف الوزن (حجمه ~7KB فقط).\n",
    "date": "2025-05-16T04:35:12.051Z"
  },
  {
    "title": "مقدمة إلى Angular",
    "slug": "/2025/05/2025-05-02-angular",
    "content": "\nimport { CodeBlock, ComparisonTable, ProCon, CodeWindow } from \"@components\";\n\n{/* 1. المقدمة */}\nAngular هو إطار عمل جافا سكريبت مفتوح المصدر تم تطويره بواسطة جوجل لبناء تطبيقات ويب حديثة.\nطورته جوجل، وهو مصمم لبناء تطبيقات ديناميكية أحادية الصفحة (SPAs) تُحمّل مرة واحدة وتُحدّث محتواها مع تفاعل المستخدمين.\nاعتبارًا من مايو 2025، يُعد Angular 20 أحدث إصدار، حيث يُقدم أداءً مُحسّنًا مع ميزات مثل اكتشاف التغييرات بدون منطقة. يستخدم Angular لغة TypeScript، وهي مجموعة فرعية من JavaScript، لمساعدة ",
    "date": "2025-05-16T04:35:12.068Z"
  },
  {
    "title": "مقدمة إلى Astro",
    "slug": "/2025/05/2025-05-02-astro",
    "content": "\nimport { HighlightText } from \"@components\";\n\n{/* 1. المقدمة */}\n\nAstro هو إطار عمل (Framework) حديث ومفتوح المصدر لبناء مواقع ويب ثابتة (Static Sites) وتطبيقات خفيفة الوزن. يتميز Astro بقدرته على توليد صفحات HTML عند وقت البناء (Build Time)، مما يُنتج مواقع سريعة الأداء وصديقة لمحركات البحث.\n\n{/* ## 2. المميزات الرئيسية */}\n\n## أهم مميزات Astro\n\n- توليد ثابت (Static Generation) بحيث يبني صفحات HTML مسبقاً ويقلل من تحميل الجافاسكربت في المتصفح.\n\n- دعم متعدد الأطر (Framework Agnostic) حتى يمكن ا",
    "date": "2025-05-16T04:35:12.085Z"
  },
  {
    "title": "مقدمة إلى Eleventy",
    "slug": "/2025/05/2025-05-02-eleventy",
    "content": "\nimport { CodeWindow } from \"@components\";\n\n{/* 1. المقدمة */}\n\nEleventy، أو كما تُعرف أيضًا بـ \"11ty\"، هي أداة حديثة وبسيطة لتوليد المواقع الثابتة (Static Site Generator - SSG) تعتمد على لغة JavaScript. تُستخدم لإنشاء مواقع ويب سريعة وآمنة دون الحاجة إلى قواعد بيانات أو برمجة خلفية معقدة. يُعتبر Eleventy خيارًا مثاليًا للمطورين الذين يبحثون عن أداة مرنة وسهلة الاستخدام لإنشاء مواقع مثل المدونات، المواقع الشخصية، أو مواقع التوثيق. ما يميز Eleventy هو بساطته ودعمه لعدة لغات قوالب (Templating Lang",
    "date": "2025-05-16T04:35:12.102Z"
  },
  {
    "title": "مقدمة إلى HTMX",
    "slug": "/2025/05/2025-05-02-htmx",
    "content": "\n{/* 1. المقدمة */}\nhtmx هي مكتبة JavaScript خفيفة الوزن تُستخدم لإنشاء واجهات ويب تفاعلية بطريقة بسيطة وحديثة دون الحاجة إلى كتابة كميات كبيرة من JavaScript. تتيح htmx إضافة سلوكيات ديناميكية إلى صفحات HTML باستخدام سمات (Attributes) مضافة مباشرة إلى العناصر، مما يجعلها مناسبة للمطورين الذين يرغبون في بناء تطبيقات ويب تفاعلية بأقل مجهود. بدلاً من الاعتماد على أطر عمل معقدة مثل React أو Vue، تُمكّن htmx المطورين من تحسين صفحات HTML التقليدية لتصبح تفاعلية بسهولة.\n\n{/* ## 2. المميزات الرئيسية */}",
    "date": "2025-05-16T04:35:12.119Z"
  },
  {
    "title": "مقدمة إلى Lit",
    "slug": "/2025/05/2025-05-02-lit",
    "content": "\n{/* 1. المقدمة */}\nLit هي مكتبة JavaScript خفيفة الوزن تم تطويرها بواسطة فريق Google لإنشاء مكونات ويب [ (Web Components)](https://safha.dev/blog/web-components)\nبسرعة وكفاءة. تُستخدم لبناء واجهات مستخدم حديثة وتفاعلية باستخدام معايير الويب القياسية، مما يجعل المكونات متوافقة مع أي إطار عمل أو بيئة. تعتمد Lit على مكونين رئيسيين: LitElement (لإنشاء مكونات مخصصة) وlit-html (لتحديث القوالب بكفاءة). تُعتبر مثالية للمطورين الذين يريدون بناء مكونات قابلة لإعادة الاستخدام دون التعقيد المرتبط بأطر العم",
    "date": "2025-05-16T04:35:12.136Z"
  },
  {
    "title": "مقدمة إلى Marko",
    "slug": "/2025/05/2025-05-02-marko",
    "content": "\n{/* 1. المقدمة */}\n\nMarko هي مكتبة JavaScript مفتوحة المصدر تم تطويرها بواسطة eBay، تُستخدم لإنشاء واجهات مستخدم ديناميكية وسريعة. تُركز على تحسين الأداء من خلال تقنيات مثل الترجمة المسبقة (Compilation) والتحميل التدريجي (Progressive Hydration). تُعتبر Marko فريدة لأنها تجمع بين بساطة الكتابة وسرعة التنفيذ، حيث يتم تحويل القوالب إلى JavaScript فعال أثناء البناء. يمكن استخدامها لإنشاء تطبيقات صفحة واحدة (SPA) أو مواقع متعددة الصفحات (MPA)، وهي تدعم التكامل مع أطر عمل أخرى مثل [ React ](https://s",
    "date": "2025-05-16T04:35:12.154Z"
  },
  {
    "title": "مقدمة إلى Mitosis",
    "slug": "/2025/05/2025-05-02-mitosis",
    "content": "\n{/* 1. المقدمة */}\nMitosis هي أداة حديثة تُستخدم لكتابة مكونات واجهة مستخدم واحدة يمكن تحويلها إلى كود متوافق مع أطر عمل متعددة مثل React، Vue، Svelte، Angular، وغيرها. تم تطويرها بواسطة فريق Builder.io، وتُركز على تقليل التكرار في كتابة الكود عند العمل على مشاريع تدعم منصات مختلفة. تعتمد Mitosis على كتابة المكونات بلغة JSX/TSX، ثم تترجمها إلى الكود المناسب لكل إطار عمل. تُعتبر مثالية للفرق التي تعمل على تطبيقات متعددة المنصات أو تحتاج إلى مشاركة المكونات بين مشاريع مختلفة. ما يميز Mitosis هو ق",
    "date": "2025-05-16T04:35:12.171Z"
  },
  {
    "title": "مقدمة إلى Next.js",
    "slug": "/2025/05/2025-05-02-nextjs",
    "content": "\n{/* 1. المقدمة */}\nNext.js هو إطار عمل مفتوح المصدر مبني فوق React، تم تطويره بواسطة Vercel لتسهيل بناء تطبيقات ويب ديناميكية وسريعة. يُستخدم لإنشاء مواقع ويب تدعم التصيير من جانب الخادم (SSR)، التوليد الثابت (SSG)، وتطبيقات الصفحة الواحدة (SPA). يتميز Next.js بميزات مثل التوجيه التلقائي (File-based Routing)، تحسين الصور، ودعم API Routes، مما يجعله مناسبًا للمشاريع الكبيرة والصغيرة. يُعتبر خيارًا شائعًا بين المطورين بسبب سهولة الإعداد وتكامله مع أدوات مثل TypeScript وTailwind CSS. Next.js مثالي",
    "date": "2025-05-16T04:35:12.187Z"
  },
  {
    "title": "مقدمة إلى Nuxt",
    "slug": "/2025/05/2025-05-02-nuxt",
    "content": "\n{/* 1. المقدمة */}\nNuxt هو إطار عمل مفتوح المصدر مبني فوق Vue.js، يُستخدم لتطوير تطبيقات ويب حديثة بسهولة وكفاءة. يُشبه Nuxt في وظيفته Next.js، حيث يدعم التصيير من جانب الخادم (SSR)، التوليد الثابت (SSG)، وتطبيقات الصفحة الواحدة (SPA). يتميز Nuxt بنظام توجيه تلقائي، إدارة الحالة (State Management) المدمجة، ودعم الإضافات (Plugins) لتوسيع الوظائف. يُعتبر مثاليًا للمطورين الذين يفضلون Vue.js ويريدون إطار عمل يوفر هيكلية منظمة وتجربة تطوير مبسطة. Nuxt مناسب لإنشاء مدونات، مواقع تجارية، أو تطبيقات و",
    "date": "2025-05-16T04:35:12.215Z"
  },
  {
    "title": "مقدمة إلى Preact",
    "slug": "/2025/05/2025-05-02-preact",
    "content": "\n{/* 1. المقدمة */}\n\nPreact هي مكتبة JavaScript خفيفة الوزن تُعتبر بديلاً لـ React، تم تطويرها بواسطة Jason Miller. تُستخدم لبناء واجهات مستخدم تفاعلية بحجم صغير جدًا (حوالي 3 كيلوبايت)، مما يجعلها مثالية للتطبيقات التي تتطلب أداءً عاليًا وتحميلًا سريعًا. تشبه Preact إلى حد كبير React في واجهة البرمجة (API) ودعم JSX والـ Hooks، لكنها تستخدم أحداث المتصفح المدمجة بدلاً من نظام أحداث خاص. تدعم Preact التوافق مع مكونات React باستخدام طبقة توافق (Compat Layer)، مما يجعلها خيارًا رائعًا للمطورين الذي",
    "date": "2025-05-16T04:35:12.245Z"
  },
  {
    "title": "مقدمة إلى Qwik",
    "slug": "/2025/05/2025-05-02-qwik",
    "content": "\n{/* 1. المقدمة */}\n\nQwik هو إطار عمل JavaScript حديث تم تطويره بواسطة فريق Builder.io، يُركز على تحقيق أداء فائق من خلال تقليل كمية JavaScript المُرسلة إلى المتصفح. يُستخدم لبناء تطبيقات ويب تتسم بالتحميل الفوري والتفاعلية العالية، حتى على الأجهزة البطيئة. يعتمد Qwik على مفهوم \"الاستئناف\" (Resumability) بدلاً من التحميل التقليدي (Hydration)، حيث يبدأ التطبيق كصفحة ثابتة ثم يُستأنف تنفيذه في المتصفح دون تحميل كود إضافي. يُعتبر Qwik مثاليًا للمطورين الذين يريدون تحسين سرعة تحميل الصفحات وتحقيق در",
    "date": "2025-05-16T04:35:12.281Z"
  },
  {
    "title": "مقدمة إلى React",
    "slug": "/2025/05/2025-05-02-react",
    "content": "\n{/* 1. المقدمة */}\nReact هي مكتبة JavaScript مفتوحة المصدر تم تطويرها بواسطة Meta (فيسبوك) لبناء واجهات مستخدم تفاعلية وديناميكية. تُستخدم على نطاق واسع في تطوير تطبيقات الصفحة الواحدة (SPA) وتطبيقات الويب المعقدة. تعتمد React على مفهوم المكونات (Components) واستخدام JSX لكتابة واجهات المستخدم بطريقة تشبه HTML. تتميز باستخدام Virtual DOM لتحديث الصفحة بكفاءة عند تغيير البيانات، مما يحسن الأداء. React مرنة وتدعم مكتبات وأدوات إضافية مثل Redux وReact Router، مما يجعلها خيارًا شائعًا للمطورين في ب",
    "date": "2025-05-16T04:35:12.312Z"
  },
  {
    "title": "مقدمة إلى Remix",
    "slug": "/2025/05/2025-05-02-remix",
    "content": "\n{/* 1. المقدمة */}\n\nRemix هو إطار عمل مفتوح المصدر مبني فوق React، يُركز على تحسين تجربة المستخدم من خلال الجمع بين التصيير من جانب الخادم (SSR) والتصيير من جانب العميل (CSR). تم تطويره لتوفير تجربة تطوير سلسة مع أداء عالٍ وتوجيه قائم على الملفات (File-based Routing). يتميز Remix بنهجه في إدارة البيانات باستخدام نموذج \"الجلب عند الطلب\" (Data Fetching on Demand)، مما يقلل من التأخير ويحسن سرعة تحميل الصفحات. يُعتبر مناسبًا للمطورين الذين يريدون بناء تطبيقات ويب ديناميكية مع التركيز على تجربة الم",
    "date": "2025-05-16T04:35:12.346Z"
  },
  {
    "title": "مقدمة إلى SolidJS",
    "slug": "/2025/05/2025-05-02-solidjs",
    "content": "\n{/* 1. المقدمة */}\n\nSolidJS هو إطار عمل JavaScript حديث يُستخدم لبناء واجهات مستخدم تفاعلية وسريعة جدًا. يُشبه React في استخدام JSX ومفهوم المكونات، لكنه يعتمد على نظام تفاعلي دقيق (Fine-grained Reactivity) باستخدام \"الإشارات\" (Signals) بدلاً من Virtual DOM. هذا يسمح بتحديث العناصر المتغيرة فقط، مما يجعل SolidJS أسرع من العديد من الأطر الأخرى. يُعتبر مثاليًا للمطورين الذين يبحثون عن أداء عالٍ مع بساطة الكود، وهو مناسب لتطبيقات الويب التي تتطلب استجابة فورية مثل لوحات التحكم أو التطبيقات التفاعل",
    "date": "2025-05-16T04:35:12.387Z"
  },
  {
    "title": "مقدمة إلى Stencil",
    "slug": "/2025/05/2025-05-02-stencil",
    "content": "\n{/* 1. المقدمة */}\n\nStencil هي أداة لتطوير مكونات ويب (Web Components) تم إنشاؤها بواسطة فريق Ionic. تُستخدم لإنشاء مكونات قياسية ومتوافقة يمكن استخدامها مع أي إطار عمل مثل React، Vue، أو Angular. تعتمد Stencil على تحويل المكونات إلى JavaScript فعال أثناء البناء، مما يضمن الأداء العالي وحجم الحزمة الصغير. تتميز بدعم ميزات مثل التحميل التكاسلي (Lazy Loading) والتصيير من جانب الخادم (SSR). Stencil مثالية للمطورين الذين يريدون بناء مكتبات مكونات قابلة لإعادة الاستخدام لمشاريع متعددة أو تطبيقات ويب",
    "date": "2025-05-16T04:35:12.415Z"
  },
  {
    "title": "مقدمة إلى Svelte",
    "slug": "/2025/05/2025-05-02-svelte",
    "content": "\n{/* 1. المقدمة */}\n\nSvelte هو إطار عمل JavaScript مفتوح المصدر تم تطويره لإنشاء واجهات مستخدم تفاعلية بطريقة مبتكرة. على عكس React أو Vue التي تعتمد على Virtual DOM لتحديث الصفحة، يقوم Svelte بترجمة الكود إلى JavaScript نقي أثناء البناء، مما ينتج تطبيقات خفيفة وسريعة جدًا. يُركز Svelte على البساطة، حيث يتيح كتابة مكونات باستخدام HTML وCSS وJavaScript في ملف واحد بصيغة .svelte. يُعتبر مثاليًا للمطورين الذين يريدون إنشاء تطبيقات ويب عالية الأداء مثل المدونات أو لوحات التحكم، مع تجربة تطوير ممتعة ",
    "date": "2025-05-16T04:35:12.451Z"
  },
  {
    "title": "مقدمة إلى Vite",
    "slug": "/2025/05/2025-05-02-vite",
    "content": "\n{/* 1. المقدمة */}\nVite هي أداة بناء (Build Tool) وخادم تطوير حديث تم تطويره بواسطة Evan You، مبتكر Vue.js. تُستخدم لتسريع عملية تطوير تطبيقات الويب من خلال توفير تجربة بناء سريعة وخفيفة مقارنة بأدوات مثل Webpack. تعتمد Vite على ES Modules المدمجة في المتصفحات لتحميل الكود أثناء التطوير، مما يقلل من وقت إعادة التحميل (Hot Module Replacement). تدعم Vite أطر عمل مثل Vue، React، Svelte، وغيرها، وهي مثالية للمطورين الذين يريدون إعدادًا سريعًا وفعالًا لمشاريع الويب الحديثة، مثل المواقع التفاعلية أو ",
    "date": "2025-05-16T04:35:12.487Z"
  },
  {
    "title": "مقدمة إلى Vue",
    "slug": "/2025/05/2025-05-02-vue",
    "content": "\n{/* 1. المقدمة */}\nVue.js (أو Vue) هو إطار عمل JavaScript مفتوح المصدر تم تطويره بواسطة Evan You لبناء واجهات مستخدم تفاعلية وتطبيقات صفحة واحدة (SPA). يُعرف بسهولة تعلمه ومرونته، حيث يمكن استخدامه لإضافة تفاعلية إلى صفحات HTML بسيطة أو بناء تطبيقات معقدة. يعتمد Vue على نظام المكونات ويستخدم بنية MVVM (Model-View-ViewModel) مع ربط بيانات ثنائي الاتجاه. يتميز بدعمه لـ Vue Router وVuex لإدارة التوجيه والحالة، مما يجعله مناسبًا للمطورين المبتدئين والمحترفين الذين يريدون إنشاء تطبيقات مثل مواقع الت",
    "date": "2025-05-16T04:35:12.517Z"
  },
  {
    "title": "مقدمة إلى Web Components",
    "slug": "/2025/05/2025-05-02-web-components",
    "content": "\n{/* 1. المقدمة */}\nWeb Components هي مجموعة من معايير الويب القياسية التي تتيح إنشاء مكونات واجهة مستخدم قابلة لإعادة الاستخدام ومستقلة يمكن استخدامها في أي تطبيق ويب، بغض النظر عن إطار العمل. تتضمن تقنيات مثل Custom Elements (لإنشاء عناصر HTML مخصصة)، Shadow DOM (لعزل الأنماط والسلوك)، وHTML Templates (لإنشاء قوالب قابلة لإعادة الاستخدام). تُستخدم Web Components لبناء مكونات مثل أزرار مخصصة، أشرطة تنقل، أو أدوات واجهة مستخدم معقدة. تُعتبر مثالية للمطورين الذين يريدون إنشاء مكونات متوافقة عبر إ",
    "date": "2025-05-16T04:35:12.552Z"
  }
]